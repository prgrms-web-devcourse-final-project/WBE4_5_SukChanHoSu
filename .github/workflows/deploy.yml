name: Backend CI & Deploy

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, closed, synchronize ]
  push:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: schs

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    outputs:
      test-result: ${{ steps.upload-test-report.outputs.artifact }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - name: Set up JDK 21
        uses: actions/setup-java@v4.7.0
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: backend/
        shell: bash

      - name: Build with Gradle with test profile
        run: ./gradlew build -Pprofile=test
        working-directory: backend/
        shell: bash

      - name: Upload test report if it exists
        if: failure()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: test-report
          path: backend/build/reports/tests/test/
          if-no-files-found: ignore

  makeTagAndRelease:
    runs-on: ubuntu-latest
    needs: backend-ci
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Create Tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
          draft: false
          prerelease: false

  buildImageAndPush:
    runs-on: ubuntu-latest
    needs: makeTagAndRelease
    outputs:
      owner_lc: ${{ steps.export_owner.outputs.owner_lc }}
      image_name: ${{ steps.export_image.outputs.image_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: ./backend/

      - name: Test with Gradle
        run: ./gradlew build -Pprofile=test
        working-directory: ./backend/

      - name: Generate application-secret.yml
        env:
          APPLICATION_SECRET: ${{ secrets.APPLICATION_SECRET }}
        run: echo "$APPLICATION_SECRET" > backend/src/main/resources/application-secret.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Export owner and image name
        id: export_owner
        run: |
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          echo "owner_lc=$OWNER_LC" >> $GITHUB_OUTPUT

      - name: Export image name
        id: export_image
        run: echo "schs" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.export_owner.outputs.owner_lc }}/${{ steps.export_image.outputs.image_name }}:${{ needs.makeTagAndRelease.outputs.tag_name }}
            ghcr.io/${{ steps.export_owner.outputs.owner_lc }}/${{ steps.export_image.outputs.image_name }}:latest
