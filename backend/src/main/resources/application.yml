server:
  forward-headers-strategy: native
  port: 8080  # ✅ 서버 포트 조정 가능 (예: 8080 → 8081)
  shutdown: graceful
  tomcat:
    max-swallow-size: 1GB  # ✅ 업로드 용량 제한 가능
    max-http-form-post-size: 1GB  # ✅ POST 요청 크기 제한

spring:
  profiles:
    active: dev
    include: secret  # ✅ 추가 설정 파일 포함

  data:
    elasticsearch:
      uris: http://localhost:9200

logging:
  level:
    org.hibernate.SQL: DEBUG  # ✅ 로그 레벨 조정 가능 (INFO, DEBUG, TRACE 등)
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
    org.springframework.security=DEBUG:
custom:
  appName: app.mm  # ✅ 앱 이름 변경 가능
  prod:
    domain: ts0608.life  # ✅ 운영 도메인 변경 가능
    backUrl: "https://api.${custom.appName}.${custom.prod.domain}"
    frontUrl: "https://www.${custom.appName}.${custom.prod.domain}"

  dev:
    domain: localhost  # ✅ 개발 도메인 변경 가능
    backUrl: "http://${custom.dev.domain}:${server.port}"
    frontUrl: "http://${custom.dev.domain}:3000"

  site:
    domain: "${custom.prod.domain}"
    backUrl: "${custom.prod.backUrl}"
    frontUrl: "${custom.prod.frontUrl}"

  genFile:
    dirPath: c:/temp/glog_dev  # ✅ 파일 저장 경로 (리눅스면 /tmp 등으로 변경 가능)

cloud: # AWS 클라우드 설정
  aws:
    s3:
      bucket: team06-moviematch-bucket # S3 버킷 이름 설정
    credentials:
      access-key: ${AWS.ACCESS_KEY}  # 환경 변수로 AWS 접근 키 설정
      secret-key: ${AWS.SECRET_KEY}
    region:
      static: ap-northeast-1  # AWS 리전 설정 (서울 리전)
    stack:
      auto: false  # 자동 스택 생성 여부 설정

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus  # Prometheus 메트릭을 수집
  metrics:
    web:
      enabled: true  # Web 메트릭을 활성화
  health:
    indicators:
      diskspace:
        enabled: true  # 디스크 공간 모니터링
      db:
        enabled: true  # DB 모니터링
      redis:
        enabled: true  # Redis 모니터링
  web:
    description: "Backend Service Monitoring"  # 서비스 설명
  prometheus:
    metrics:
      export:
        enabled: true
        step: 1m

prometheus:
  endpoint: /actuator/prometheus  # Prometheus 메트릭 노출 경로
  scrape-interval: 10s  # Prometheus에서 메트릭을 얼마나 자주 가져올지 (10초마다)
